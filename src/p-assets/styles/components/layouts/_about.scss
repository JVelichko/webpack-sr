@mixin count-move($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      top: calc((-#{$container-max-width} + 100vw) / 2 * (-1));
    }
  }
}

@mixin count-height($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      height: calc(#{$container-max-width} * 0.4);
    }
  }
}

#l-about {
  position: relative;
  height: auto;
  overflow: hidden;
  padding-bottom: 0;
  margin-bottom: 150px;
}

#polimer {
  position: relative;
  height: auto;
  overflow: hidden;
}

.bg-line {
  position: absolute;
  background: transparent;

  &::after {
    content: '';
    position: absolute;
    left: 0;
    width: 170 * 1vw;
    height: 40 * 1vw;
    background: #f5f5f5;
    transform-origin: top left;
    transform: rotate(47deg);

    @include count-move;
    @include count-height;
  }
}

.masked {
  height: 100%;
  width: 100%;
  -webkit-clip-path: polygon(100% 0, 100% 100%, 35% 100%, 0% 50%, 35% 0%);
  clip-path: polygon(100% 0, 100% 100%, 35% 100%, 0% 50%, 35% 0%);
}

.masked-col {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  background-color: rgba(darken($blue, 20%), 0.5);
  -webkit-clip-path: polygon(100% 0, 100% 100%, 90% 100%, 57% 50%, 90% 0%);
  clip-path: polygon(100% 0, 100% 100%, 90% 100%, 57% 50%, 90% 0%);
}
